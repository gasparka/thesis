-- generated by pyha 0.0.4 at 2017-04-23 15:03:49
library ieee;
    use ieee.std_logic_1164.all;
    use ieee.numeric_std.all;
    use ieee.fixed_float_types.all;
    use ieee.fixed_pkg.all;
    use ieee.math_real.all;

library work;
    use work.ComplexTypes.all;
    use work.PyhaUtil.all;
    use work.all;


package MovingAverage_0 is

    type sfixed0_17_list_t is array (natural range <>) of sfixed(0 downto -17);

    type next_t is record
        window_len: integer;
        shr: sfixed0_17_list_t(0 to 3);
        sum: sfixed(0 downto -17);
        mul: sfixed(0 downto -17);
        coef: sfixed(0 downto -17);
    end record;

    type self_t is record
        -- constants
        window_pow: integer;
        \_delay\: integer;

        window_len: integer;
        shr: sfixed0_17_list_t(0 to 3);
        sum: sfixed(0 downto -17);
        mul: sfixed(0 downto -17);
        coef: sfixed(0 downto -17);
        \next\: next_t;
    end record;

    procedure \_pyha_init_self\(self: inout self_t);

    procedure \_pyha_constants_self\(self: inout self_t);

    procedure \_pyha_reset_self\(self: inout self_t);

    procedure \_pyha_update_self\(self: inout self_t);


    procedure main(self:inout self_t; x: sfixed(0 downto -17); ret_0:out sfixed(0 downto -17));
end package;

package body MovingAverage_0 is
    procedure \_pyha_init_self\(self: inout self_t) is
    begin
        self.\next\.window_len := self.window_len;
        self.\next\.shr := self.shr;
        self.\next\.sum := self.sum;
        self.\next\.mul := self.mul;
        self.\next\.coef := self.coef;
        \_pyha_constants_self\(self);
    end procedure;

    procedure \_pyha_constants_self\(self: inout self_t) is
    begin
        self.window_pow := 2;
        self.\_delay\ := 2;

    end procedure;

    procedure \_pyha_reset_self\(self: inout self_t) is
    begin
        self.\next\.window_len := 4;
        self.\next\.shr := (Sfix(0.0, 0, -17), Sfix(0.0, 0, -17), Sfix(0.0, 0, -17), Sfix(0.0, 0, -17));
        self.\next\.sum := Sfix(0.0, 0, -17);
        self.\next\.mul := Sfix(0.0, 0, -17);
        self.\next\.coef := Sfix(0.25, 0, -17);
        \_pyha_update_self\(self);
    end procedure;

    procedure \_pyha_update_self\(self: inout self_t) is
    begin
        self.window_len := self.\next\.window_len;
        self.shr := self.\next\.shr;
        self.sum := self.\next\.sum;
        self.mul := self.\next\.mul;
        self.coef := self.\next\.coef;
        \_pyha_constants_self\(self);
    end procedure;


    procedure main(self:inout self_t; x: sfixed(0 downto -17); ret_0:out sfixed(0 downto -17)) is

    begin
        self.\next\.shr := x & self.shr(0 to self.shr'high-1);
        self.\next\.sum := resize(self.sum + x - self.shr(self.shr'length-1), 0, -17, fixed_wrap, fixed_round);

        self.\next\.mul := resize(self.sum * self.coef, 0, -17, fixed_saturate, fixed_round);
        ret_0 := self.mul;
        return;
    end procedure;

    -- def main(self, x):

    --     mul = x >> self.window_pow

    --

    --     self.next.shift_register = [mul] + self.shift_register[:-1]

    --

    --     # calculate new sum

    --     self.next.sum = self.sum + mul - self.shift_register[-1]

    --

    --     return self.sum


end package body;
