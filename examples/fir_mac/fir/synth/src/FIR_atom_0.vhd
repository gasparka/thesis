-- generated by pyha 0.0.4 at 2017-04-18 19:49:59
library ieee;
    use ieee.std_logic_1164.all;
    use ieee.numeric_std.all;
    use ieee.fixed_float_types.all;
    use ieee.fixed_pkg.all;
    use ieee.math_real.all;

library work;
    use work.ComplexTypes.all;
    use work.PyhaUtil.all;
    use work.all;


package FIR_atom_0 is

    type MAC_0_list_t is array (natural range <>) of MAC_0.self_t;

    type next_t is record
        mac: MAC_0_list_t(0 to 3);
        y: sfixed(0 downto -17);
    end record;

    type self_t is record
        -- constants
        \_delay\: integer;

        mac: MAC_0_list_t(0 to 3);
        y: sfixed(0 downto -17);
        \next\: next_t;
    end record;

    procedure \_pyha_init_self\(self: inout self_t);

    procedure \_pyha_constants_self\(self: inout self_t);

    procedure \_pyha_reset_self\(self: inout self_t);

    procedure \_pyha_update_self\(self: inout self_t);


    procedure filter(self:inout self_t; x: sfixed(0 downto -17); ret_0:out sfixed(1 downto -34));


    procedure main(self:inout self_t; x: sfixed(0 downto -17); ret_0:out sfixed(0 downto -17));
end package;

package body FIR_atom_0 is
    procedure \_pyha_init_self\(self: inout self_t) is
    begin
        MAC_0.\_pyha_init_self\(self.mac(0));
        MAC_0.\_pyha_init_self\(self.mac(1));
        MAC_0.\_pyha_init_self\(self.mac(2));
        MAC_0.\_pyha_init_self\(self.mac(3));
        self.\next\.y := self.y;
        \_pyha_constants_self\(self);
    end procedure;

    procedure \_pyha_constants_self\(self: inout self_t) is
    begin
        self.\_delay\ := 2;
        MAC_0.\_pyha_constants_self\(self.mac(0));
        MAC_0.\_pyha_constants_self\(self.mac(1));
        MAC_0.\_pyha_constants_self\(self.mac(2));
        MAC_0.\_pyha_constants_self\(self.mac(3));
    end procedure;

    procedure \_pyha_reset_self\(self: inout self_t) is
    begin
        self.mac(0).\next\.coef := Sfix(0.1787098066014265, 0, -17);
        self.mac(0).\next\.acc := Sfix(0.0, 1, -34);
        self.mac(1).\next\.coef := Sfix(0.36710735883668366, 0, -17);
        self.mac(1).\next\.acc := Sfix(0.0, 1, -34);
        self.mac(2).\next\.coef := Sfix(0.36710735883668366, 0, -17);
        self.mac(2).\next\.acc := Sfix(0.0, 1, -34);
        self.mac(3).\next\.coef := Sfix(0.1787098066014265, 0, -17);
        self.mac(3).\next\.acc := Sfix(0.0, 1, -34);
        self.\next\.y := Sfix(0.0, 0, -17);
        \_pyha_update_self\(self);
    end procedure;

    procedure \_pyha_update_self\(self: inout self_t) is
    begin
        MAC_0.\_pyha_update_self\(self.mac(0));
        MAC_0.\_pyha_update_self\(self.mac(1));
        MAC_0.\_pyha_update_self\(self.mac(2));
        MAC_0.\_pyha_update_self\(self.mac(3));
        self.y := self.\next\.y;
        \_pyha_constants_self\(self);
    end procedure;


    procedure filter(self:inout self_t; x: sfixed(0 downto -17); ret_0:out sfixed(1 downto -34)) is
        variable sum_in: sfixed(1 downto -34);
    begin
        sum_in := Sfix(0.0, 1, -34);
        for \_i_\ in self.mac'range loop
            MAC_0.main(self.mac(\_i_\), x, sum_in, ret_0=>sum_in);

        end loop;
        ret_0 := sum_in;
        return;
    end procedure;


    procedure main(self:inout self_t; x: sfixed(0 downto -17); ret_0:out sfixed(0 downto -17)) is
        variable fir_out: sfixed(1 downto -34);
    begin
        filter(self, x, ret_0=>fir_out);

        self.\next\.y := resize(fir_out, 0, -17, fixed_saturate, fixed_truncate);
        ret_0 := self.y;
        return;
    end procedure;
end package body;
